/*
 * Copyright (c) 2017 kszatan
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

project.ext.pluginDesc = [
        id         : 'io.github.kszatan.gocd.phabricator.stagingmaterial',
        version    : project.version,
        goCdVersion: '17.4.0',
        name       : 'Phabricator Staging Area Material Plugin',
        description: 'Plugin that polls a Phabricator staging area for new revisions.',
        vendorName : 'Krzysztof Szatan',
        vendorUrl  : 'https://github.com/kszatan/gocd-phabricator-staging-material'
]

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile 'cd.go.plugin:go-plugin-api:17.4.+'
    compile 'com.google.code.gson:gson:2.8.+'
    compile 'commons-io:commons-io:2.5'
    compile 'org.eclipse.jgit:org.eclipse.jgit:4.7.0.201704051617-r'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.+'
}

jar {
    from(configurations.compile) {
        into "lib/"
    }
}

processResources {
    from("src/main/resource-templates") {
        filesMatching('plugin.xml') {
            expand project.pluginDesc
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}
